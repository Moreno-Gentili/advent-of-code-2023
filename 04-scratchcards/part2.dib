#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!csharp

using System.Linq;
using System.IO;

string[] lines = System.IO.File.ReadAllLines("input.txt");

Dictionary<int, int> matchingNumbers = new(
    from cardIndex in Enumerable.Range(0, lines.Length)
    let sections = lines[cardIndex].Split(':').Last().Split('|')
    let winningNumbers = sections.First().Split(' ', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse)
    let haveNumbers = sections.Last().Split(' ', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse)
    let matchingNumbersCount = haveNumbers.Intersect(winningNumbers).Count()
    select new KeyValuePair<int, int>(cardIndex, matchingNumbersCount)
);

int cardsWonCount = 0;
Queue<int> cardsWon = new(
    from cardIndex in Enumerable.Range(0, lines.Length)
    select cardIndex);

while (cardsWon.TryDequeue(out int cardIndex))
{
    cardsWonCount++;
    Enumerable.Range(cardIndex + 1, matchingNumbers[cardIndex])
              .ToList()
              .ForEach(cardsWon.Enqueue);
}

cardsWonCount
